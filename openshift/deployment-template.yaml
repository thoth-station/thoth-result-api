apiVersion: v1
kind: Template
metadata:
  name: result-api-deployment
  annotations:
    description: >
      This is Thoth Result API Deployment, this template is meant to be used by
      Bots, but could also be used by humans...
    openshift.io/display-name: "Thoth Result API Deployment"
    version: 0.7.1
    tags: thoth,result-api,ai-stacks,aistacks
    template.openshift.io/documentation-url: https://github.com/Thoth-Station/
    template.openshift.io/long-description: >
      This is Thoth Result API Deployment, this template is meant to be used
      by Bots, but could also be used by humans...
    template.openshift.io/provider-display-name: "Red Hat, Inc."
    thoth-station.ninja/template-version: 0.7.0
  labels:
    template: result-api-deployment
    app: thoth
    component: result-api

parameters:
  - description: Project the ImageStream to be use lives in
    displayName: ImageStream Project
    required: true
    name: IMAGE_STREAM_PROJECT_NAME

  - description: Tag of the ImageStream to be use
    displayName: ImageStream Tag
    required: true
    name: IMAGE_STREAM_TAG
    value: "latest"

  - description: Service account to be used.
    displayName: Service account name.
    required: true
    name: SERVICE_ACCOUNT_NAME
    value: "result-api"

objects:
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: thoth
        component: result-api
        service: result-api
      annotations:
        thoth-station.ninja/template-version: 0.7.0
      name: result-api
      annotations:
        thoth-station.ninja/template-version: 0.7.1
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        service: result-api

  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        thoth-station.ninja/template-version: 0.7.0
      labels:
        app: thoth
        component: result-api
        service: result-api
      name: result-api
      annotations:
        thoth-station.ninja/template-version: 0.7.1
    spec:
      replicas: 1
      selector:
        service: result-api
      template:
        metadata:
          labels:
            service: result-api
        spec:
          serviceAccountName: "${SERVICE_ACCOUNT_NAME}"
          containers:
            - name: result-api
              env:
                - name: THOTH_DEPLOYMENT_NAME
                  valueFrom:
                    configMapKeyRef:
                      key: storage-bucket-name
                      name: thoth
                - name: THOTH_PERSISTENT_VOLUME_PATH
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-results-path
                      name: thoth
                - name: THOTH_S3_ENDPOINT_URL
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-host
                      name: thoth
                - name: THOTH_CEPH_BUCKET
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-bucket-name
                      name: thoth
                - name: THOTH_CEPH_BUCKET_PREFIX
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-bucket-prefix
                      name: thoth
                - name: THOTH_CEPH_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: ceph-key-id
                - name: THOTH_CEPH_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: ceph-secret-key
                - name: RSYSLOG_HOST
                  valueFrom:
                  configMapKeyRef:
                    key: rsyslog-host
                    name: thoth
                - name: RSYSLOG_PORT
                  valueFrom:
                  configMapKeyRef:
                    key: rsyslog-port
                    name: thoth
                - name: SENTRY_DSN
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: sentry-dsn
                - name: KNOWLEDGE_GRAPH_HOST
                  valueFrom:
                    configMapKeyRef:
                      key: postgresql-host
                      name: thoth
                - name: KNOWLEDGE_GRAPH_PORT
                  value: "5432"
                - name: KNOWLEDGE_GRAPH_SSL_DISABLED
                  value: "1"
                - name: KNOWLEDGE_GRAPH_USER
                  valueFrom:
                    secretKeyRef:
                      name: postgresql
                      key: database-user
                - name: KNOWLEDGE_GRAPH_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: postgresql
                      key: database-password
                - name: KNOWLEDGE_GRAPH_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: postgresql
                      key: database-name
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                limits:
                  cpu: 750m
                  memory: 768Mi
                requests:
                  cpu: 750m
                  memory: 768Mi
              readinessProbe:
                httpGet:
                  path: "/readiness"
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 10
                timeoutSeconds: 10
              livenessProbe:
                httpGet:
                  path: "/liveness"
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 60
                timeoutSeconds: 10
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - result-api
            from:
              kind: ImageStreamTag
              namespace: "${IMAGE_STREAM_PROJECT_NAME}"
              name: "result-api:${IMAGE_STREAM_TAG}"
